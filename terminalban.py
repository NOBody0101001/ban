import os
import shutil

home_dir = os.path.expanduser("~")
ban_file_path = os.path.join(home_dir, "ban_list.txt")

ban_list_memory = {}

def load_ban_list():
    global ban_list_memory
    if not os.path.exists(ban_file_path):
        ban_list_memory = {}
        return
    with open(ban_file_path, "r") as file:
        lines = file.readlines()
    ban_list_memory = {}
    for line in lines:
        user_id, user_name, user_surname = line.strip().split(",")
        ban_list_memory[user_id] = (user_name, user_surname)

def save_ban_list():
    global ban_list_memory
    with open(ban_file_path, "w") as file:
        for user_id, (user_name, user_surname) in ban_list_memory.items():
            file.write(f"{user_id},{user_name},{user_surname}\n")

def ban_user(user_id, user_name, user_surname):
    global ban_list_memory
    ban_list_memory[user_id] = (user_name, user_surname)
    save_ban_list()
    print(f"Kullanƒ±cƒ± {user_name} {user_surname} (ID: {user_id}) yasaklandƒ±.")

def check_ban_by_name(user_name):
    global ban_list_memory
    for uid, (uname, usurname) in ban_list_memory.items():
        if uname == user_name:
            print("\033[91mYasaklandƒ±\033[0m")
            return
    print("\033[92mYasaklƒ± deƒüil\033[0m")

def check_ban_by_surname(user_surname):
    global ban_list_memory
    for uid, (uname, usurname) in ban_list_memory.items():
        if usurname == user_surname:
            print("\033[91mYasaklandƒ±\033[0m")
            return
    print("\033[92mYasaklƒ± deƒüil\033[0m")

def check_ban_by_id(user_id):
    global ban_list_memory
    if user_id in ban_list_memory:
        print("\033[91mYasaklandƒ±\033[0m")
    else:
        print("\033[92mYasaklƒ± deƒüil\033[0m")

def unban_user(user_id=None, user_name=None, user_surname=None):
    global ban_list_memory
    removed = False
    if user_id and user_id in ban_list_memory:
        del ban_list_memory[user_id]
        removed = True
    elif user_name:
        for uid, (uname, usurname) in list(ban_list_memory.items()):
            if uname == user_name:
                del ban_list_memory[uid]
                removed = True
                break
    elif user_surname:
        for uid, (uname, usurname) in list(ban_list_memory.items()):
            if usurname == user_surname:
                del ban_list_memory[uid]
                removed = True
                break
    if removed:
        save_ban_list()
        print("\033[92mYasak kaldƒ±rƒ±ldƒ±\033[0m")
    else:
        print("\033[91mKullanƒ±cƒ± bulunamadƒ±\033[0m")

def display_advertisement():
    text_art = """
     ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚†ò‚£∑‚£∂‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£∑‚°í‚¢Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†ô‚°Ñ‚†Ä‚†ê‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚†§‚¢Ñ‚°Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚†ò‚°Ñ‚†Ä‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°à‚†í‚¢Ñ‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä‚†±‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†Ä‚†±‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚†Ä‚¢É‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ñ‚£π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£æ‚£ø‚£∂‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£¥‚£∂‚£ø‚£≠‚£ç‚°â‚†ô‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†õ‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°∑‚¢Ç‚£ì‚£∂‚£∂‚£∂‚£∂‚£§‚£§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚†ü‚¢Ä‚£¥‚¢ø‚£ø‚£ø‚£ø‚†ü‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†§‚†§‚†§‚†§‚†ô‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚°è‚£†‚†ü‚°â‚£æ‚£ø‚£ø‚†ã‚°†‚†ä‚£ø‚°ü‚£π‚£ø‚¢ø‚£ø‚£ø‚£ø‚†ø‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£§‚£∂‚£§‚£≠‚£§‚£º‚£ø‚¢õ‚£ø‚£ø‚£ø‚£ø‚£ª‚£ø‚£ø‚†á‚†ê‚¢Ä‚£ø‚£ø‚°∑‚†ã‚†Ä‚¢†‚£ø‚£∫‚£ø‚£ø‚¢∫‚£ø‚£ã‚£â‚£â‚£©‚£¥‚£∂‚£§‚£§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†õ‚†ª‚†ø‚£ø‚£ø‚£ø‚£á‚¢ª‚£ø‚£ø‚°ø‚†ø‚£ø‚£Ø‚°Ä‚†Ä‚¢∏‚£ø‚†ã‚¢Ä‚£†‚£∂‚†ø‚†ø‚¢ø‚°ø‚†à‚£æ‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚†õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ª‚¢ß‚°∏‚£ø‚£ø‚£ø‚†Ä‚†É‚†ª‚†ü‚¢¶‚¢æ‚¢£‚†∂‚†ø‚†è‚†Ä‚†∞‚†Ä‚£º‚°á‚£∏‚£ø‚£ø‚†ü‚†â‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£¥‚£æ‚£∂‚£Ω‚£ø‚°ü‚†ì‚†í‚†Ä‚†Ä‚°Ä‚†Ä‚††‚†§‚†¨‚†â‚†Å‚£∞‚£•‚£æ‚£ø‚£ø‚£∂‚£∂‚£∑‚°∂‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†π‚†ü‚£ø‚£ø‚°Ñ‚†Ä‚†Ä‚††‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ü‚†õ‚†õ‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†ã‚†π‚£∑‚£Ñ‚†Ä‚†ê‚£ä‚£Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†Å‚†£‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£§‚£Ä‚†§‚†ä‚¢Å‚°∏‚†Ä‚£Ü‚†π‚£ø‚£ß‚£Ä‚†Ä‚†Ä‚°†‚†ñ‚°ë‚†Å‚†Ä‚†Ä‚†Ä‚†ë‚¢Ñ‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£¶‚£∂‚£ø‚£ø‚£ü‚£Å‚£§‚£æ‚†ü‚†Å‚¢Ä‚£ø‚£Ü‚†π‚°Ü‚†ª‚£ø‚†â‚¢Ä‚†ú‚°∞‚†Ä‚†Ä‚†à‚†ë‚¢¶‚°Ä‚†à‚¢æ‚†ë‚°æ‚†≤‚£Ñ‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ñ‚†í‚†ö‚†õ‚†õ‚†¢‚†Ω‚¢Ñ‚£ò‚£§‚°é‚††‚†ø‚†Ç‚†Ä‚††‚†¥‚†∂‚¢â‚°≠‚†É‚¢∏‚†É‚†Ä‚£ø‚£ø‚£ø‚†°‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°§‚†∂‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†í‚†¢‚£§‚†î‚†Å‚†Ä‚¢Ä‚°è‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚†Ä‚¢ª‚°ü‚†ë‚†¢‚¢Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚°Ä‚†â‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚£Ä‚£Ä‚°Ä‚†Ä‚¢∏‚£∑‚°Ä‚£Ä‚£Ä‚°†‚†î‚†ä‚†Ä‚†Ä‚¢Ä‚£†‚°û‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°ø‚†Ä‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ë‚¢§‚†Ä‚†Ä
‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚°Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ù‚°õ‚†ø‚¢ø‚£∑‚£¶‚£Ñ‚°Ä‚†à‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£¥‚£æ‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚¢∏‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ú‚†Ä‚†Ä
‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚°á‚†Ä‚¢∞‚£∑‚†Ä‚¢Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£¶‚£≠‚£ç‚£â‚£â‚†Ä‚¢Ä‚£Ä‚£§‚£∂‚£æ‚£ø‚£ø‚£ø‚¢ø‚†ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°∞‚†â‚¢¶‚†Ä
‚¢Ä‚£º‚£ø‚£ø‚°ø‚¢±‚†Ä‚¢∏‚£ø‚°Ä‚¢∏‚£ß‚°Ä‚†Ä‚¢ø‚£ø‚£ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°≠‚†ñ‚†Å‚†Ä‚°†‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚¢†‚†É‚†Ä‚†à‚£Ä
‚¢∏‚£ø‚£ø‚£ø‚°á‚†Ä‚¢ß‚¢∏‚£ø‚£á‚¢∏‚£ø‚£∑‚°Ä‚†à‚£ø‚£ø‚£á‚†à‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†ø‚†ø‚†ø‚†ø‚†ü‚°ª‚†ü‚†â‚†Ä‚†Ä‚°†‚†ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚°Ñ‚†Ä‚¢†‚£ø‚†î‚†Å‚†Ä‚¢∏
‚†à‚£ø‚£ø‚£ø‚£∑‚°Ä‚†Ä‚¢ª‚£ø‚£ø‚°ú‚£ø‚£ø‚£∑‚°Ä‚†à‚¢ø‚£ø‚°Ñ‚†Ä‚†Ä‚†à‚†õ‚†ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£∂‚£∂‚°∂‚†ñ‚†â‚†Ä‚£Ä‚£§‚°∂‚†ã‚†Ä‚£†‚£∂‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£ß‚£∂‚£ø‚£ø‚†ñ‚°†‚†ñ‚†Å
‚†Ä‚£ø‚£ø‚£∑‚£å‚°õ‚†∂‚£º‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚°Ñ‚†à‚¢ª‚£∑‚†Ä‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†õ‚†õ‚†õ‚†Å‚£Ä‚£§‚£∂‚£æ‚†ü‚†ã‚†Ä‚£†‚£æ‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚†∑‚†ä‚†Ä‚¢∞‚†Ä
‚¢∞‚£ø‚£ø‚†Ä‚†à‚¢â‚°∂‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†Ä‚†ô‚¢á‚†à‚¢ø‚£∂‚£¶‚£§‚£Ä‚£Ä‚£†‚£§‚£∂‚£ø‚£ø‚°ø‚†õ‚†Å‚¢Ä‚£§‚£æ‚£ø‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚°ø‚†ø‚†ã‚†ô‚†í‚†Ñ‚†Ä‚†â‚°Ñ
‚£ø‚£ø‚°è‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†â‚†â‚†ô‚¢ª‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†õ‚†Å‚†Ä‚£Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞
    """
    print(text_art)
    print("\033[91m made by protocolhere üòà\033[0m")

def main():
    load_ban_list()
    while True:
        display_advertisement()
        print("\n1. Name Check\n2. Surname Check\n3. ID Check\n4. Add Ban\n5. Remove Ban\n6. Exit")
        choice = input("Bir se√ßenek se√ßin: ")
        
        if choice == "1":
            user_name = input("Kullanƒ±cƒ± adƒ±nƒ± girin (Opsiyonel): ")
            if user_name:
                check_ban_by_name(user_name)
            else:
                print("Kullanƒ±cƒ± adƒ± girilmedi.")
        elif choice == "2":
            user_surname = input("Kullanƒ±cƒ± soyadƒ±nƒ± girin (Opsiyonel): ")
            if user_surname:
                check_ban_by_surname(user_surname)
            else:
                print("Kullanƒ±cƒ± soyadƒ± girilmedi.")
        elif choice == "3":
            user_id = input("Kullanƒ±cƒ± ID'sini girin (Opsiyonel): ")
            if user_id:
                check_ban_by_id(user_id)
            else:
                print("Kullanƒ±cƒ± ID'si girilmedi.")
        elif choice == "4":
            user_id = input("Yasaklamak istediƒüiniz kullanƒ±cƒ±nƒ±n ID'sini girin: ")
            user_name = input("Yasaklamak istediƒüiniz kullanƒ±cƒ±nƒ±n adƒ±nƒ± girin: ")
            user_surname = input("Yasaklamak istediƒüiniz kullanƒ±cƒ±nƒ±n soyadƒ±nƒ± girin: ")
            ban_user(user_id, user_name, user_surname)
        elif choice == "5":
            user_id = input("Banƒ±nƒ± kaldƒ±rmak istediƒüiniz kullanƒ±cƒ±nƒ±n ID'sini girin (Opsiyonel): ")
            user_name = input("Banƒ±nƒ± kaldƒ±rmak istediƒüiniz kullanƒ±cƒ±nƒ±n adƒ±nƒ± girin (Opsiyonel): ")
            user_surname = input("Banƒ±nƒ± kaldƒ±rmak istediƒüiniz kullanƒ±cƒ±nƒ±n soyadƒ±nƒ± girin (Opsiyonel): ")
            unban_user(user_id or None, user_name or None, user_surname or None)
        elif choice == "6":
            break
        else:
            print("Ge√ßersiz se√ßenek, l√ºtfen tekrar deneyin.")

if __name__ == "__main__":
    if not os.path.exists(ban_file_path):
        open(ban_file_path, 'w').close()
    
    main()
